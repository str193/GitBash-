*JSON
 4. Создать внешний репозиторий c названием JSON.

 5. Клонировать репозиторий JSON на локальный компьютер. >>> git clone https://github.com/str193/JSON.git

 6. Внутри локального JSON создать файл “new.json”. >>> touch new.json

 7. Добавить файл под гит. >>> git add new.json

 8. Закоммитить файл. >>> git commit -m 'New first file'

 9. Отправить файл на внешний GitHub репозиторий. >>>  git push 

 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON. 
>>> vim touch new.json
{
"name": "Starovoitov Ivan Alexsandrovich",
"age": 28,
"pets": "none",
"salary": 999
}
# "Esc">>>:wq>>>"Enter"

 11. Отправить изменения на внешний репозиторий. >>> git push 

 12. Создать файл preferences.json >>> touch preferences.json

 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
>>> vim preferences.json
{
"favorite_movie": "Green Mile",
"favorite_series": "Paper house",
"favorite_time_of_year": "summer",
"favorite_country": "The USA"
}

 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON >>> vim sklls.json
{
"skils": [ "GitBash", "JS", "SQL", "Postman" ]
}

 15. Отправить сразу 2 файла на внешний репозиторий. >>> git add preferences.json sklls.json
>>> git commit -m "Two new file"
>>> git push -u origin master

 16. На веб интерфейсе создать файл bug_report.json.
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 20. Синхронизировать внешний и локальный репозиторий JSON >>> git pull 



XML
 21. Создать внешний репозиторий c названием XML. 

 22. Клонировать репозиторий XML на локальный компьютер. >>> git clone https://github.com/str193/XML.git

 23. Внутри локального XML создать файл “new.xml”. >>> touch new.xml

 24. Добавить файл под гит. >>> git add new.xml

 25. Закоммитить файл. >>> git commit -m 'New xml'

 26. Отправить файл на внешний GitHub репозиторий. >>> git push 

 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
 >>> vim new.xml
<roоt>
  <item>
    <key>Name</key>
    <value>Starovoitov Ivan Alexsandrovich</value>
  </item>
  <item>
    <key>age</key>
    <value>28</value>
  </item>
  <item>
    <key>pets</key>
    <value>none</value>
  </item>
  <item>
    <key>salary</key>
    <value>999</value>
  </item>
</roоt>
	
 28. Отправить изменения на внешний репозиторий.
>>>git add new.xml
>>>git commir -m 'New xml file'
>>>git push  

 29. Создать файл preferences.xml >>> touch preferences.xml

 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
 >>>vim preferences.xml
<roоt>
  <item>
    <key>favorite_movie</key>
    <value>Green Mile</value>
  </item>
  <item>
    <key>favorite_series</key>
    <value>Paper house</value>
  </item>
  <item>
    <key>favorite_time_of_year</key>
    <value>summer</value>
  </item>
  <item>
    <key>favorite_country</key>
    <value>The USA</value>
  </item>
</roоt>

 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
>>>vim sklls.xml
<roоt>
  <item>
    <key>skils</key>
    <value>GitBash JS SQL Postman</value>
  </item>
</roоt>

 32. Сделать коммит в одну строку. >>> git commit -am "Two new file"

 33. Отправить сразу 2 файла на внешний репозиторий.
>>> git add preferences.xml sklls.xml
>>> git commit -m "Two new xml file"
>>> git push 

 34. На веб интерфейсе создать файл bug_report.xml.
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 38. Синхронизировать внешний и локальный репозиторий XML >>>git pull 

TXT
 1. Создать внешний репозиторий c названием TXT.
 
 2. Клонировать репозиторий TXT на локальный компьютер. >>> git clone https://github.com/str193/TXT.git
 
 3. Внутри локального TXT создать файл “new.txt”. >>> touch new.txt

 4. Добавить файл под гит. >>> git add new.txt

 5. Закоммитить файл. >>>git commit -m 'Nex txt file'

 6. Отправить файл на внешний GitHub репозиторий. >>>git push

 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
 >>>vim new.txt
name: Starovoitov Ivan Alexsandrovich
age: 28
pets: none
salary: 999

 8. Отправить изменения на внешний репозиторий.
>>>git add new.xml
>>>git commir -m 'New xml file'
>>>git push  

 9. Создать файл preferences.txt
>>>touch preferences.txt

 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
>>>vim preferences.txt
favorite_movie: Green Mile
favorite_series: Paper house
favorite_time_of_year: summer
favorite_country: The USA

 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
>>>vim sklls.txt
skils: GitBash, JS, SQL, Postman

 12. Сделать коммит в одну строку. >>>git commit -am 'Two new txt file'

 13. Отправить сразу 2 файла на внешний репозиторий. >>>git push

 14. На веб интерфейсе создать файл bug_report.txt.
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 18. Синхронизировать внешний и локальный репозиторий TXT >>>git pull 