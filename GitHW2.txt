1. На локальном репозитории сделать ветки для:
- Postman >>>git checkout -b Postman

- Jmeter >>> git checkout -b Jmeter

- CheckLists>>> git checkout -b CheckLists

- Bag Reports>>> git checkout -b Bag_Reports

- SQL>>> git checkout -b SQL

- Charles>>> git checkout -b Charles

- Mobile testing>>> git checkout -b Mobile_testing


2. Запушить все ветки на внешний репозиторий >>>git push --all

3. В ветке Bag Reports сделать текстовый документ со структурой баг репорта
>>>git checkout  Bag_Reports
>>>vim bag.txt
Короткое описание (Summary)
	Короткое описание проблемы, явно указывающее на причину и тип ошибочной ситуации.
Шаги воспроизведения (Steps to Reproduce)
	Шаги, по которым можно легко воспроизвести ситуацию, приведшую к ошибке.
Фактический Результат (Result)
	Результат, полученный после прохождения шагов к воспроизведению
Ожидаемый результат (Expected Result)
	Ожидаемый правильный результат
Серьезность (Severity)
	S1 Блокирующий (Blocker)
	S2 Критический (Critical)
	S3 Значительный (Major)
	S4 Незначительный (Minor)
	S5 Тривиальный (Trivial)
Приоритет (Priority)
	P1 Высокий (High)
	P2 Средний (Medium)
	P3 Низкий (Low)
4. Запушить структуру багрепорта на внешний репозиторий
>>>git add bag.txt
>>>git commit -m 'Bag report sempl'
>>> git push --set-upstream origin Bag_Reports

5. Вмержить ветку Bag Reports в Main>>>git checkout main
>>>git merge Bug_Reports -m "merge bug1"

6. Запушить main на внешний репозиторий. >>>git push --all

7. В ветке CheckLists набросать структуру чек листа.>>>git checkout CheckLists
>>>vim CheckLists.txt
Tester: 
Enviroment:
Application:
Version / Build:
Date:

Number		Discription of checking		Expected result		Actual result		Comment

8. Запушить структуру на внешний репозиторий>>>git add CheckLists.txt
>>>git commit -m 'CheckLists sempl'
>>> git push --set-upstream origin CheckLists

9. На внешнем репозитории сделать Pull Request ветки CheckLists в main

10. Синхронизировать Внешнюю и Локальную ветки Main
>>>git checkout main
>>>git fetch
>>> git pull
